Ú
HD:\Facultate\dotnet\RealEstateManagement\RealEstateManagement\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddApplication 
(  
)  !
;! "
builder 
. 
Services 
. 
AddInfrastructure "
(" #
builder# *
.* +
Configuration+ 8
)8 9
;9 :
builder

 
.

 
Services

 
.

 
AddControllers

 
(

  
)

  !
;

! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
ê
\D:\Facultate\dotnet\RealEstateManagement\RealEstateManagement\Controllers\UsersController.cs
	namespace 	 
RealEstateManagement
 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public		 

class		 
UsersController		  
:		! "
ControllerBase		# 1
{

 
private 
readonly 
	IMediator "
mediator# +
;+ ,
public 
UsersController 
( 
	IMediator (
mediator) 1
)1 2
{ 	
this 
. 
mediator 
= 
mediator $
;$ %
} 	
} 
} Ï$
cD:\Facultate\dotnet\RealEstateManagement\RealEstateManagement\Controllers\TransactionsController.cs
	namespace 	 
RealEstateManagement
 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 
) 
] 
[		 
ApiController		 
]		 
public

 

class

 "
TransactionsController

 '
:

( )
ControllerBase

* 8
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
private 
readonly "
ITransactionRepository /"
_transactionRepository0 F
;F G
public "
TransactionsController %
(% &
	IMediator& /
mediator0 8
,8 9"
ITransactionRepository: P!
transactionRepositoryQ f
)f g
{ 	
	_mediator 
= 
mediator  
;  !"
_transactionRepository "
=# $!
transactionRepository% :
;: ;
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
Transaction' 2
>2 3
>3 4
AddTransaction5 C
(C D
TransactionD O
transactionP [
)[ \
{ 	
var 
createdTransaction "
=# $
await% *"
_transactionRepository+ A
.A B
AddTransactionAsyncB U
(U V
transactionV a
)a b
;b c
return 
CreatedAtAction "
(" #
nameof# )
() *
AddTransaction* 8
)8 9
,9 :
new; >
{? @
idA C
=D E
createdTransactionF X
.X Y
TransactionIdY f
}g h
,h i
createdTransactionj |
)| }
;} ~
} 	
[ 	
HttpPut	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
UpdateTransaction) :
(: ;
Guid; ?
id@ B
,B C
TransactionD O
transactionP [
)[ \
{ 	
if 
( 
id 
!= 
transaction !
.! "
TransactionId" /
)/ 0
{   
return!! 

BadRequest!! !
(!!! "
)!!" #
;!!# $
}"" 
try$$ 
{%% 
await&& "
_transactionRepository&& ,
.&&, -"
UpdateTransactionAsync&&- C
(&&C D
transaction&&D O
)&&O P
;&&P Q
}'' 
catch(( 
((( 
	Exception(( 
ex(( 
)((  
{)) 
if** 
(** 
ex** 
.** 
Message** 
.** 
Contains** '
(**' (
$str**( 3
)**3 4
)**4 5
{++ 
return,, 
NotFound,, #
(,,# $
),,$ %
;,,% &
}-- 
throw.. 
;.. 
}// 
return11 
	NoContent11 
(11 
)11 
;11 
}22 	
[44 	

HttpDelete44	 
(44 
$str44 
)44 
]44 
public55 
async55 
Task55 
<55 
IActionResult55 '
>55' (
DeleteTransaction55) :
(55: ;
Guid55; ?
id55@ B
)55B C
{66 	
try77 
{88 
await99 "
_transactionRepository99 ,
.99, -"
DeleteTransactionAsync99- C
(99C D
id99D F
)99F G
;99G H
}:: 
catch;; 
(;; 
	Exception;; 
ex;; 
);;  
{<< 
if== 
(== 
ex== 
.== 
Message== 
.== 
Contains== '
(==' (
$str==( 3
)==3 4
)==4 5
{>> 
return?? 
NotFound?? #
(??# $
)??$ %
;??% &
}@@ 
throwAA 
;AA 
}BB 
returnDD 
	NoContentDD 
(DD 
)DD 
;DD 
}EE 	
}FF 
}GG ê.
gD:\Facultate\dotnet\RealEstateManagement\RealEstateManagement\Controllers\PropertyListingsController.cs
	namespace		 	 
RealEstateManagement		
 
.		 
Controllers		 *
{

 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class &
PropertyListingsController +
:, -
ControllerBase. <
{ 
private 
readonly 
	IMediator "
mediator# +
;+ ,
public &
PropertyListingsController )
() *
	IMediator* 3
mediator4 <
)< =
{ 	
this 
. 
mediator 
= 
mediator $
;$ %
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
Result' -
<- .
Guid. 2
>2 3
>3 4
>4 5!
CreatePropertyListing6 K
(K L(
CreatePropertyListingCommandL h
commandi p
)p q
{ 	
var 
result 
= 
await 
mediator '
.' (
Send( ,
(, -
command- 4
)4 5
;5 6
if 
( 
result 
. 
	IsSuccess  
)  !
{ 
return 
Ok 
( 
result  
.  !
Data! %
)% &
;& '
} 
else 
{ 
return   

BadRequest   !
(  ! "
result  " (
.  ( )
ErrorMessage  ) 5
)  5 6
;  6 7
}!! 
}"" 	
[## 	
HttpPut##	 
(## 
$str## 
)## 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
ActionResult$$ &
<$$& '
Result$$' -
<$$- .
Unit$$. 2
>$$2 3
>$$3 4
>$$4 5!
UpdatePropertyListing$$6 K
($$K L
Guid$$L P
id$$Q S
,$$S T(
UpdatePropertyListingCommand$$U q
command$$r y
)$$y z
{%% 	
if&& 
(&& 
id&& 
!=&& 
command&& 
.&& 

PropertyId&& (
)&&( )
{'' 
return(( 

BadRequest(( !
(((! "
)((" #
;((# $
})) 
var** 
result** 
=** 
await** 
mediator** '
.**' (
Send**( ,
(**, -
command**- 4
)**4 5
;**5 6
if++ 
(++ 
result++ 
.++ 
	IsSuccess++  
)++  !
{,, 
return-- 
	NoContent--  
(--  !
)--! "
;--" #
}.. 
else.. 
{// 
return00 

BadRequest00 !
(00! "
result00" (
.00( )
ErrorMessage00) 5
)005 6
;006 7
}11 
}33 	
[44 	
HttpGet44	 
(44 
$str44 
)44 
]44 
public55 
async55 
Task55 
<55 
ActionResult55 &
<55& '
PropertyListingDto55' 9
>559 :
>55: ;
GetListingByIdAsync55< O
(55O P
Guid55P T
id55U W
)55W X
{66 	
var77 
result77 
=77 
await77 
mediator77 '
.77' (
Send77( ,
(77, -
new77- 0
GetListingByIdQuery771 D
{77E F

PropertyId77G Q
=77R S
id77T V
}77W X
)77X Y
;77Y Z
return88 
Ok88 
(88 
result88 
)88 
;88 
}99 	
[;; 	
HttpGet;;	 
];; 
public<< 
async<< 
Task<< 
<<< 
ActionResult<< &
<<<& '
List<<' +
<<<+ ,
PropertyListingDto<<, >
><<> ?
><<? @
><<@ A'
GetAllPropertyListingsAsync<<B ]
(<<] ^
)<<^ _
{== 	
var>> 
result>> 
=>> 
await>> 
mediator>> '
.>>' (
Send>>( ,
(>>, -
new>>- 0&
GetAllPropertyListingQuery>>1 K
(>>K L
)>>L M
)>>M N
;>>N O
return?? 
Ok?? 
(?? 
result?? 
)?? 
;?? 
}@@ 	
[BB 	

HttpDeleteBB	 
(BB 
$strBB 
)BB  
]BB  !
publicCC 
asyncCC 
TaskCC 
<CC 
IActionResultCC '
>CC' (!
DeletePropertyListingCC) >
(CC> ?
GuidCC? C
idCCD F
)CCF G
{DD 	
varEE 
resultEE 
=EE 
awaitEE 
mediatorEE '
.EE' (
SendEE( ,
(EE, -
newEE- 0(
DeletePropertyListingCommandEE1 M
{EEN O

PropertyIdEEP Z
=EE[ \
idEE] _
}EE` a
)EEa b
;EEb c
ifFF 
(FF 
resultFF 
.FF 
	IsSuccessFF  
)FF  !
{GG 
returnHH 
	NoContentHH  
(HH  !
)HH! "
;HH" #
}II 
elseJJ 
{KK 
returnLL 

BadRequestLL !
(LL! "
resultLL" (
.LL( )
ErrorMessageLL) 5
)LL5 6
;LL6 7
}MM 
}NN 	
}PP 
}QQ ü2
fD:\Facultate\dotnet\RealEstateManagement\RealEstateManagement\Controllers\ClientInquiriesController.cs
	namespace 	 
RealEstateManagement
 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class %
ClientInquiriesController *
:+ ,
ControllerBase- ;
{ 
private 
readonly 
	IMediator "
mediator# +
;+ ,
public %
ClientInquiriesController (
(( )
	IMediator) 2
mediator3 ;
); <
{ 	
this 
. 
mediator 
= 
mediator $
;$ %
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
CreateInquiry) 6
(6 7&
CreateClientInquiryCommand7 Q
commandR Y
)Y Z
{ 	
var 
result 
= 
await 
mediator '
.' (
Send( ,
(, -
command- 4
)4 5
;5 6
if 
( 
result 
. 
	IsSuccess  
)  !
{ 
return 
Ok 
( 
result  
.  !
Data! %
)% &
;& '
} 
return 

BadRequest 
( 
result $
.$ %
ErrorMessage% 1
)1 2
;2 3
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetInquiryById) 7
(7 8
Guid8 <
id= ?
)? @
{ 	
var   
result   
=   
await   
mediator   '
.  ' (
Send  ( ,
(  , -
new  - 0
GetInquiryByIdQuery  1 D
{  E F
	InquiryId  G P
=  Q R
id  S U
}  V W
)  W X
;  X Y
return!! 
Ok!! 
(!! 
result!! 
)!! 
;!! 
}"" 	
[## 	
HttpGet##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
ActionResult$$ &
<$$& '
List$$' +
<$$+ ,
PropertyListingDto$$, >
>$$> ?
>$$? @
>$$@ A 
GetAllInquiriesAsync$$B V
($$V W
)$$W X
{%% 	
var&& 
result&& 
=&& 
await&& 
mediator&& '
.&&' (
Send&&( ,
(&&, -
new&&- 0 
GetAllInquiriesQuery&&1 E
(&&E F
)&&F G
)&&G H
;&&H I
return'' 
Ok'' 
('' 
result'' 
)'' 
;'' 
}(( 	
[)) 	
HttpGet))	 
()) 
$str)) )
)))) *
]))* +
public** 
async** 
Task** 
<** 
ActionResult** &
<**& '
List**' +
<**+ ,
ClientInquiryDto**, <
>**< =
>**= >
>**> ?"
GetInquiriesByClientId**@ V
(**V W
Guid**W [
clientId**\ d
)**d e
{++ 	
var,, 
result,, 
=,, 
await,, 
mediator,, '
.,,' (
Send,,( ,
(,,, -
new,,- 0%
GetInquiryByClientIdQuery,,1 J
{,,K L
ClientId,,M U
=,,V W
clientId,,X `
},,a b
),,b c
;,,c d
return-- 
Ok-- 
(-- 
result-- 
)-- 
;-- 
}.. 	
[00 	
HttpPut00	 
(00 
$str00 
)00 
]00 
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
UpdateInquiry11) 6
(116 7
Guid117 ;
id11< >
,11> ?&
UpdateClientInquiryCommand11@ Z
command11[ b
)11b c
{22 	
if33 
(33 
id33 
!=33 
command33 
.33 
	InquiryId33 &
)33& '
{44 
return55 

BadRequest55 !
(55! "
$str55" 8
)558 9
;559 :
}66 
var77 
result77 
=77 
await77 
mediator77 '
.77' (
Send77( ,
(77, -
command77- 4
)774 5
;775 6
if88 
(88 
result88 
.88 
	IsSuccess88  
)88  !
{99 
return:: 
Ok:: 
(:: 
result::  
.::  !
Data::! %
)::% &
;::& '
};; 
return<< 

BadRequest<< 
(<< 
result<< $
.<<$ %
ErrorMessage<<% 1
)<<1 2
;<<2 3
}== 	
[?? 	

HttpDelete??	 
(?? 
$str?? 
)??  
]??  !
public@@ 
async@@ 
Task@@ 
<@@ 
IActionResult@@ '
>@@' (
DeleteInquiry@@) 6
(@@6 7
Guid@@7 ;
id@@< >
)@@> ?
{AA 	
varBB 
resultBB 
=BB 
awaitBB 
mediatorBB '
.BB' (
SendBB( ,
(BB, -
newBB- 0&
DeleteClientInquiryCommandBB1 K
{BBL M
	InquiryIdBBN W
=BBX Y
idBBZ \
}BB] ^
)BB^ _
;BB_ `
ifCC 
(CC 
resultCC 
.CC 
	IsSuccessCC  
)CC  !
{DD 
returnEE 
OkEE 
(EE 
resultEE  
.EE  !
DataEE! %
)EE% &
;EE& '
}FF 
returnGG 

BadRequestGG 
(GG 
resultGG $
.GG$ %
ErrorMessageGG% 1
)GG1 2
;GG2 3
}HH 	
}II 
}JJ 