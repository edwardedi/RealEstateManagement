ø	
RC:\Users\cezar\desktop\RealEstateManagement\Domain\Repositories\IUserRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IUserRepository $
{ 
Task 
< 
Result 
< 
IEnumerable 
<  
User  $
>$ %
>% &
>& '
GetAllUsersAsync( 8
(8 9
)9 :
;: ;
Task		 
<		 
Result		 
<		 
User		 
>		 
>		 
GetUserByIdAsync		 +
(		+ ,
Guid		, 0
id		1 3
)		3 4
;		4 5
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
UpdateUserAsync

 *
(

* +
User

+ /
user

0 4
)

4 5
;

5 6
Task 
< 
Result 
< 
Guid 
> 
> 
DeleteUserAsync *
(* +
Guid+ /
id0 2
)2 3
;3 4
} 
} ∞
VC:\Users\cezar\desktop\RealEstateManagement\Domain\Repositories\IUserAuthRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IUserAuthRepository (
{ 
Task 
< 
Result 
< 
Guid 
> 
> 
Register #
(# $
User$ (
user) -
,- .
CancellationToken/ @
cancellationTokenA R
)R S
;S T
Task		 
<		 
Result		 
<		 
string		 
>		 
>		 
Login		 "
(		" #
User		# '
user		( ,
)		, -
;		- .
}

 
} «
YC:\Users\cezar\desktop\RealEstateManagement\Domain\Repositories\ITransactionRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface "
ITransactionRepository +
{ 
Task 
< 
Result 
< 
IEnumerable 
<  
Transaction  +
>+ ,
>, -
>- .#
GetAllTransactionsAsync/ F
(F G
)G H
;H I
Task		 
<		 
Result		 
<		 
Transaction		 
>		  
>		  !#
GetTransactionByIdAsync		" 9
(		9 :
Guid		: >
id		? A
)		A B
;		B C
Task

 
<

 
Result

 
<

 
Transaction

 
>

  
>

  !+
GetTransactionByPropertyIdAsync

" A
(

A B
Guid

B F
id

G I
)

I J
;

J K
Task 
< 
Result 
< 
IEnumerable 
<  
Transaction  +
>+ ,
>, -
>- .$
GetTransactionsByBuyerId/ G
(G H
GuidH L
userIdM S
)S T
;T U
Task 
< 
Result 
< 
IEnumerable 
<  
Transaction  +
>+ ,
>, -
>- .%
GetTransactionsBySellerId/ H
(H I
GuidI M
userIdN T
)T U
;U V
Task 
< 
Result 
< 
Guid 
> 
> 
AddTransactionAsync .
(. /
Transaction/ :
transaction; F
)F G
;G H
Task 
< 
Result 
< 
Guid 
> 
> "
UpdateTransactionAsync 1
(1 2
Transaction2 =
transaction> I
)I J
;J K
Task 
< 
Result 
< 
Guid 
> 
> "
DeleteTransactionAsync 1
(1 2
Guid2 6
id7 9
)9 :
;: ;
} 
} »
CC:\Users\cezar\desktop\RealEstateManagement\Domain\Entities\User.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
User 
{ 
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
PhoneNumber "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
string		 
?		 
PasswordHash		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
}

 
} Õ
[C:\Users\cezar\desktop\RealEstateManagement\Domain\Repositories\IClientInquiryRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface $
IClientInquiryRepository -
{ 
Task 
< 
Result 
< 
IEnumerable 
<  
ClientInquiry  -
>- .
>. /
>/ 0 
GetAllInquiriesAsync1 E
(E F
)F G
;G H
Task		 
<		 
Result		 
<		 
ClientInquiry		 !
>		! "
>		" #
GetInquiryByIdAsync		$ 7
(		7 8
Guid		8 <
id		= ?
)		? @
;		@ A
Task

 
<

 
Result

 
<

 
IEnumerable

 
<

  
ClientInquiry

  -
>

- .
>

. /
>

/ 0"
GetInquiriesByClientId

1 G
(

G H
Guid

H L
clientId

M U
)

U V
;

V W
Task 
< 
Result 
< 
Guid 
> 
> 
AddInquiryAsync *
(* +
ClientInquiry+ 8
inquiry9 @
)@ A
;A B
Task 
< 
Result 
< 
Guid 
> 
> 
UpdateInquiryAsync -
(- .
ClientInquiry. ;
inquiry< C
)C D
;D E
Task 
< 
Result 
< 
Guid 
> 
> 
DeleteInquiryAsync -
(- .
Guid. 2
id3 5
)5 6
;6 7
Task 
< 
Result 
< 
IEnumerable 
<  
PropertyListing  /
>/ 0
>0 1
>1 2$
SearchAllPropertiesAsync3 K
(K L
stringL R
searchQueryS ^
)^ _
;_ `
} 
} ü
]C:\Users\cezar\desktop\RealEstateManagement\Domain\Repositories\IPropertyListingRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface &
IPropertyListingRepository /
{ 
Task 
< 
Result 
< 
IEnumerable 
<  
PropertyListing  /
>/ 0
>0 1
>1 2
GetAllListingsAsync3 F
(F G
)G H
;H I
Task		 
<		 
Result		 
<		 
PropertyListing		 #
>		# $
>		$ %
GetListingByIdAsync		& 9
(		9 :
Guid		: >
id		? A
)		A B
;		B C
Task

 
<

 
Result

 
<

 
IEnumerable

 
<

  
PropertyListing

  /
>

/ 0
>

0 1
>

1 2
GetListingsByUserId

3 F
(

F G
Guid

G K
userId

L R
)

R S
;

S T
Task 
< 
Result 
< 
Guid 
> 
> 
AddListingAsync *
(* +
PropertyListing+ :
listing; B
)B C
;C D
Task 
< 
Result 
< 
Guid 
> 
> 
UpdateListingAsync -
(- .
PropertyListing. =
listing> E
)E F
;F G
Task 
< 
Result 
< 
Guid 
> 
> 
DeleteListingAsync -
(- .
Guid. 2
id3 5
)5 6
;6 7
} 
} ù
JC:\Users\cezar\desktop\RealEstateManagement\Domain\Entities\Transaction.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Transaction 
{ 
public 
Guid 
TransactionId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Guid 

PropertyId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Guid 
BuyerId 
{ 
get !
;! "
set# &
;& '
}( )
public 
Guid 
SellerId 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
double		 
	SalePrice		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
}

 
} Ó
NC:\Users\cezar\desktop\RealEstateManagement\Domain\Entities\PropertyListing.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
PropertyListing  
{ 
public 
Guid 

PropertyId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Address 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Type 
{ 
get !
;! "
set# &
;& '
}( )
public		 
double		 
Price		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
double

 
SquareFootage

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
double 
NumberOfBedrooms &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
double 
NumberOfBathrooms '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Status 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
ListingDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ImageURLs  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Guid 
UserID 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Ï
LC:\Users\cezar\desktop\RealEstateManagement\Domain\Entities\ClientInquiry.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
ClientInquiry 
{ 
public 
Guid 
	InquiryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Guid 
ClientId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
List 
< 
string 
> 
? 
Types "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
double 
MinPrice 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
double		 
MaxPrice		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
double

 
MinSquareFootage

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
double 
MaxSquareFootage &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
double 
NumberOfBedrooms &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
double 
NumberOfBathrooms '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ‘
CC:\Users\cezar\desktop\RealEstateManagement\Domain\Common\Result.cs
	namespace 	
Domain
 
. 
Common 
{ 
public 

class 
Result 
< 
T 
> 
{ 
public 
T 
Data 
{ 
get 
; 
} 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
}% &
public 
string 
ErrorMessage "
{# $
get% (
;( )
}* +
	protected		 
Result		 
(		 
T		 
data		 
,		  
bool		! %
	isSuccess		& /
,		/ 0
string		1 7
errorMessage		8 D
)		D E
{

 	
Data 
= 
data 
; 
	IsSuccess 
= 
	isSuccess !
;! "
ErrorMessage 
= 
errorMessage '
;' (
} 	
public 
static 
Result 
< 
T 
> 
Success  '
(' (
T( )
data* .
). /
=>0 2
new3 6
(6 7
data7 ;
,; <
true= A
,A B
nullC G
!G H
)H I
;I J
public 
static 
Result 
< 
T 
> 
Failure  '
(' (
string( .
errorMessage/ ;
); <
{ 	
return 
new 
Result 
< 
T 
>  
(  !
default! (
!( )
,) *
false+ 0
,0 1
errorMessage2 >
)> ?
;? @
} 	
} 
} 